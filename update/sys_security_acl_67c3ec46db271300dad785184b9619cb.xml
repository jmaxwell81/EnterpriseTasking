<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_security_acl">
    <sys_security_acl action="INSERT_OR_UPDATE">
        <active>true</active>
        <admin_overrides>false</admin_overrides>
        <advanced>true</advanced>
        <condition/>
        <description>Field level Write control for the Must Deliver By field on the Enterprise Tasking table of the Enterprise Tasking application.</description>
        <name>x_etask_enterprise_tasking.u_this_due_date</name>
        <operation display_value="write">write</operation>
        <script><![CDATA[if(current.u_current_state == 'Submitted' ||
   current.u_current_state == 'Accepted' ||
   current.u_current_state == 'Closed' ||
   current.u_current_state == 'Cancelled'){
	answer = false;
} else {
	var currentUser = gs.getUserID();
	var currentDateTime = new GlideDateTime();
	var userUtil = new ETASKUserUtil();
	var powerGranted = false;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// start test current user power
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	if(gs.hasRole('x_etask.user')){
		if(current.number == ''){
			powerGranted = true;
		} else if(current.u_current_state != 'Submitted' && current.u_current_state != 'Accepted'){
			if(current.u_current_state != 'Closed' && current.u_current_state != 'Cancelled'){
				if(gs.hasRole('x_etask.admin') || current.sys_created_by == gs.getUser().getName()){
					powerGranted = true;
				} else {
					powerGranted = false;
				}
			} else {
				powerGranted = false;
			}
		} else {
			powerGranted = false;
		}
	} else {
		powerGranted = false;
	}
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// end test current user power
	////////////////////////////////////////////////////////////////////////////////////////////////////////////

	if(powerGranted == false){
		var delegates = new GlideRecord('x_etask_delegate');
		delegates.addQuery('u_user', currentUser);
		delegates.addQuery('u_global', true).addOrCondition('u_associated_task', current.getValue('sys_id'));
		delegates.query();
		while(delegates.next() && powerGranted == false){
			var dateTime = '';
			var delegate = new GlideRecord('sys_user');
			delegate.addQuery('user_name', delegates.getValue('sys_created_by'));
			delegate.query();
			delegate.next();
			var activeDelegate = true;
			if(delegates.getValue('u_starts') != ''){
				dateTime = new GlideDateTime(delegates.getValue('u_starts'));
				if(currentDateTime.compareTo(dateTime) >= 0){
					activeDelegate = true;
				} else {
					activeDelegate = false;
				}
			}
			if(delegates.getValue('u_ends') != ''){
				dateTime = new GlideDateTime(delegates.getValue('u_ends'));
				if(currentDateTime.compareTo(dateTime) <= 0){
					activeDelegate = true;
				} else {
					activeDelegate = false;
				}
			}
			if(activeDelegate == true){
				////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// start test delegate power
				////////////////////////////////////////////////////////////////////////////////////////////////////////////
				if(userUtil.hasRole(delegate.sys_id, 'x_etask.user')){
					if(current.number == ''){
						powerGranted = true;
					} else if(current.u_current_state != 'Submitted' && current.u_current_state != 'Accepted'){
						if(current.u_current_state != 'Closed' && current.u_current_state != 'Cancelled'){
							if(userUtil.hasRole(delegate.sys_id, 'x_etask.admin') ||
							   current.sys_created_by == delegate.user_name){
								powerGranted = true;
							} else {
								powerGranted = false;
							}
						} else {
							powerGranted = false;
						}
					} else {
						powerGranted = false;
					}
				} else {
					powerGranted = false;
				}
				////////////////////////////////////////////////////////////////////////////////////////////////////////////
				// end test delegate power
				////////////////////////////////////////////////////////////////////////////////////////////////////////////
			} else {
				powerGranted = false;
			}
		}
	}
	if(powerGranted == true){
		answer = true;
	} else {
		answer = false;
	}
}]]></script>
        <sys_class_name>sys_security_acl</sys_class_name>
        <sys_created_by>joseph.adomatis</sys_created_by>
        <sys_created_on>2018-07-28 05:49:39</sys_created_on>
        <sys_id>67c3ec46db271300dad785184b9619cb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>x_etask_enterprise_tasking.u_this_due_date</sys_name>
        <sys_package display_value="Enterprise Tasking" source="x_231571_enterpris">8b059f75db631300dad785184b96193b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Enterprise Tasking">8b059f75db631300dad785184b96193b</sys_scope>
        <sys_update_name>sys_security_acl_67c3ec46db271300dad785184b9619cb</sys_update_name>
        <sys_updated_by>joseph.adomatis</sys_updated_by>
        <sys_updated_on>2018-07-28 05:49:39</sys_updated_on>
        <type display_value="record">record</type>
    </sys_security_acl>
</record_update>
