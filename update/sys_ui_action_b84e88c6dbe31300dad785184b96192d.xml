<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>false</client>
        <comments>To Submit an Enterprise Tasking - check that all children are accepted/cancelled, and that the delivery type requirements are met</comments>
        <condition>(gs.hasRole('x_etask.admin') || current.assigned_to== gs.getUserID()) &amp;&amp; current.u_current_state == "In Progress"</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>true</form_context_menu>
        <form_link>false</form_link>
        <form_style/>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Submit</name>
        <onclick/>
        <order>90</order>
        <script><![CDATA[(function(current, action) {
	var childCheck = false;
	var documentCheck = false;
	var noteCheck = false;
	var errorMessage = '';
	var childTaskGR = new GlideRecord('x_etask_enterprise_tasking');
	childTaskGR.addQuery('parent', current.sys_id);
	childTaskGR.addQuery('u_current_state', '!=', 'Accepted');
	childTaskGR.addQuery('u_current_state', '!=', 'Cancelled');
	childTaskGR.query();
	if(childTaskGR.next()){
		errorMessage = 'All children tasks must be Accepted or Cancelled to continue.';
		gs.addErrorMessage(errorMessage);
		childCheck = false;
	} else {
		childCheck = true;
	}
	if(current.u_delivery_type == 'Document'){
		noteCheck = true;
		var deliveryDocuments = new GlideRecord('x_etask_attachment');
		deliveryDocuments.addQuery('u_tasker', current.sys_id);
		deliveryDocuments.addQuery('u_attachment_type', 'Delivery Document');
		deliveryDocuments.query();
		if(deliveryDocuments.next()){
			documentCheck = true;
		} else {
			errorMessage = 'This task requires a Document delivery.\n';
			errorMessage += 'Ensure Document is listed in Attachments and set Attachment Type to \'Delivery Document\'';
			gs.addErrorMessage(errorMessage);
			documentCheck = false;
		}
	} else {
		documentCheck = true;
		if(current.work_notes == ''){
			errorMessage = 'This task requires a Work Note for delivery.';
			gs.addErrorMessage(errorMessage);
			noteCheck = false;
		} else {
			noteCheck = true;
		}		
	}
	if(childCheck == true && documentCheck == true && noteCheck == true){
		current.u_current_state = "Submitted";
		current.update();
		action.setRedirectURL(current);
	} else {
		current.setAbortAction(true);
	}
})(current, action);]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>joseph.adomatis</sys_created_by>
        <sys_created_on>2018-07-28 04:16:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b84e88c6dbe31300dad785184b96192d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Submit</sys_name>
        <sys_overrides/>
        <sys_package display_value="Enterprise Tasking" source="x_231571_enterpris">8b059f75db631300dad785184b96193b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Enterprise Tasking">8b059f75db631300dad785184b96193b</sys_scope>
        <sys_update_name>sys_ui_action_b84e88c6dbe31300dad785184b96192d</sys_update_name>
        <sys_updated_by>joseph.adomatis</sys_updated_by>
        <sys_updated_on>2018-07-28 04:16:24</sys_updated_on>
        <table>x_etask_enterprise_tasking</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
